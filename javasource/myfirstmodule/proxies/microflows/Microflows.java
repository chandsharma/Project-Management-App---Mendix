// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static void aCT_Story_toCompleted(IContext context, myfirstmodule.proxies.Stories _stories, myfirstmodule.proxies.Project _project)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Stories", _stories == null ? null : _stories.getMendixObject());
		params.put("Project", _project == null ? null : _project.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_Story_toCompleted").withParams(params).execute(context);
	}
	public static void aCT_Story_toPending(IContext context, myfirstmodule.proxies.Stories _stories, myfirstmodule.proxies.Project _project)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Stories", _stories == null ? null : _stories.getMendixObject());
		params.put("Project", _project == null ? null : _project.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_Story_toPending").withParams(params).execute(context);
	}
	public static void aCT_Story_toRunning(IContext context, myfirstmodule.proxies.Stories _stories, myfirstmodule.proxies.Project _project)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Stories", _stories == null ? null : _stories.getMendixObject());
		params.put("Project", _project == null ? null : _project.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_Story_toRunning").withParams(params).execute(context);
	}
	public static myfirstmodule.proxies.Dashboard_Stat cAL_Dashboard_Stats(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.CAL_Dashboard_Stats").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Dashboard_Stat.initialize(context, result);
	}
	public static java.lang.Long cAL_Dev_AGE(IContext context, myfirstmodule.proxies.Devs _devs)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Devs", _devs == null ? null : _devs.getMendixObject());
		return (java.lang.Long) Core.microflowCall("MyFirstModule.CAL_Dev_AGE").withParams(params).execute(context);
	}
	public static java.util.List<myfirstmodule.proxies.Project> cONTENT_Dev_Project(IContext context, myfirstmodule.proxies.Devs _devs)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Devs", _devs == null ? null : _devs.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.CONTENT_Dev_Project").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Project> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Project.initialize(context, obj));
		}
		return result;
	}
	public static void dEL_Story(IContext context, myfirstmodule.proxies.Stories _stories)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Stories", _stories == null ? null : _stories.getMendixObject());
		Core.microflowCall("MyFirstModule.DEL_Story").withParams(params).execute(context);
	}
	public static void dEV_Story_Status_New(IContext context, myfirstmodule.proxies.Stories _stories)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Stories", _stories == null ? null : _stories.getMendixObject());
		Core.microflowCall("MyFirstModule.DEV_Story_Status_New").withParams(params).execute(context);
	}
	public static void sHOW_Dev_Projects(IContext context, myfirstmodule.proxies.Devs _devs)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Devs", _devs == null ? null : _devs.getMendixObject());
		Core.microflowCall("MyFirstModule.SHOW_Dev_Projects").withParams(params).execute(context);
	}
}